{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-09-14T01:55:28.692030+00:00",
  "repo": "thibmeu/http-message-signatures-directory",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 4,
      "id": "I_kwDOOXJyWM6ywrL-",
      "title": "Discuss tradeoff between replay resistance and efficiency",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/4",
      "state": "OPEN",
      "author": "jhoyla",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "When loading a single website it's not uncommon to have dozens, if not hundreds, of requests to the same FQDN. Creating and verifying dozens of signed requests that only differ in the nonce almost simultaneously would be very inefficient, but not requiring a nonce (and thus allowing the signature to be cached) allows for replays. Perhaps the draft should discuss options for balancing these two.\nSome options include:\n1. Allow small numbers of replays. This probably requires state on the server side, but given that we need to store nonces to enforce them this might not be too bad.\n2. Allow replays but only for signatures with very short (e.g. 5 second) lifetimes. This still lets a malicious client do less work than the server (unless the server caches the verification result I guess), but given that this is non-repudiatable, I don't think it's a significant risk. \n3. Enforcing nonces strictly, but providing a cookie along with each response to a signed request. The client can send a few signed requests in parallel, and once the first one has a response switch to using the cookie. The downside of this is that if an adversary gets a signed request they can exchange it for a cookie, which can then be replayed, but this can be managed through cookie mechanisms.\n",
      "createdAt": "2025-04-16T09:52:49Z",
      "updatedAt": "2025-05-20T12:18:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "This seems to be a lot of implementation details, and I'm not sure what would exactly be useful here or how to present it.\n\nWould you have suggestions?",
          "createdAt": "2025-05-06T17:29:57Z",
          "updatedAt": "2025-05-06T17:29:57Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Some of these concerns seems to be shared with https://github.com/w3ctag/design-reviews/pull/1094\n\nSpecifically, how to avoid sending headers multiple time for a \"session\", concept that's out of this standard scope for now.",
          "createdAt": "2025-05-16T08:06:21Z",
          "updatedAt": "2025-05-16T08:06:21Z"
        },
        {
          "author": "jhoyla",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So HTTP Message Sigs is similar to DBSC in some ways, but I think the trade-offs are very different. First, DBSC is aimed at human users, so things like adding a roundtrip have a much higher weight than they do for bots. Second, HMS cares much less about sessions. Whereas a user might want to stay logged in for days or weeks, a bot is more likely to have a short lived interaction with a zone. It also may be using the same signing key whilst acting on behalf of multiple different users, so I think the session paradigm doesn't really apply neatly. Third, we don't really care about the bots activities being linkable to each other, except in so far as they link together the activities of a single user.\n\nThe core concerns raised by MT seem to be about efficiency vs security, which also apply here, but I think the answers are very different. We rely on the security of the signature generator more, because we're talking corporate IT, rather than end-user devices. \n\nWith respect to your first comment, I am worried that most people will in practice implement option 0, allow unbounded numbers of replays, and only request new signatures on suspicion of abuse. In the unbounded replay scenario the scheme is relatively efficient for both parties, at the expense of security. Adding text describing the trade-off between efficiency and security and different patterns one might employ will hopefully steer people away from option 0.",
          "createdAt": "2025-05-16T11:22:56Z",
          "updatedAt": "2025-05-16T11:22:56Z"
        },
        {
          "author": "leelynne",
          "authorAssociation": "NONE",
          "body": "It seems like either you use a nonce for one-time usage or you need to rely on time based windows for efficiency. This can rely on `created` and `expired` signature parameters plus whatever setting the server wants to use.  Would the guidance from HTTP signature 7.2.2 would apply? https://www.rfc-editor.org/rfc/rfc9421.html#name-signature-replay",
          "createdAt": "2025-05-19T20:01:11Z",
          "updatedAt": "2025-05-19T20:01:35Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "@leelynne these are the existing recommendations that have been provided in the draft, in section [Anti-replay](https://thibmeu.github.io/http-message-signatures-directory/draft-meunier-web-bot-auth-architecture.html#name-anti-replay).",
          "createdAt": "2025-05-20T12:18:02Z",
          "updatedAt": "2025-05-20T12:18:02Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOOXJyWM6yw1fO",
      "title": "Threat model: Multi-CDN",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/5",
      "state": "CLOSED",
      "author": "jhoyla",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In a multi-CDN use-case all the CDNs need to trust each other, because one CDN can use signed requests that it receives to impersonate an agent to the others. This attack exists even if the CDN uses `Accept-Signature` to provide a fresh nonce, because the malicious CDN can simply forward the `Accept-Signature` message to the agent.  We should add a sentence to the threat model covering this possibility.\n\nI'm not sure how this can be avoided without cooperation from the client, because even if the CDN creates a structured / authenticated nonce, if the client doesn't understand the structure it will sign it even if it comes from the \"wrong\" CDN. Even with cooperation from the client, I'm not sure how the client could easily / reliably distinguish between CDNs.",
      "createdAt": "2025-04-16T10:09:26Z",
      "updatedAt": "2025-05-07T08:34:51Z",
      "closedAt": "2025-05-07T08:34:51Z",
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Possibly along this line, enhancing the security considerations to mention HTTP Message Signatures would be one identification method, and is going to be used in conjunction with others (old like IP ranges, new like req mTLS).\n\nIf the IP range of the origin was allowlisted, that would already reduce potential abuse, even if this is out of scope for this draft.",
          "createdAt": "2025-04-18T12:26:53Z",
          "updatedAt": "2025-04-18T12:26:53Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOOXJyWM6yxH2d",
      "title": "Performance of a global nonce store",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/7",
      "state": "CLOSED",
      "author": "jhoyla",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "To enforce nonces strictly the origin needs to keep a list of all nonces that it has seen whose signatures are still valid. For a multi-server architecture this could amount to a sync on a global database, which could have a significant performance cost, especially as most requests will both read and write. In practice it might make more sense to enforce weaker guarantees in the name of performance.",
      "createdAt": "2025-04-16T10:36:31Z",
      "updatedAt": "2025-05-07T08:32:58Z",
      "closedAt": "2025-05-07T08:32:58Z",
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Agree. I think it should suffice for the draft to remove the MUST on verify nonce uniqueness to MAY to solve the issue.\n\nA specific addition in the security consideration can be added as well",
          "createdAt": "2025-05-06T17:15:26Z",
          "updatedAt": "2025-05-06T17:15:26Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOOXJyWM6yyKMU",
      "title": "Add acknowledgements",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/8",
      "state": "CLOSED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [],
      "body": "Acknowledgements need to be in at some point. Ideally before the spec is adopted by a WG.\n\nI have a list with at least 10 people I'd like to add. Let's reach out and make sure they are OK with being mentioned in a public document, and if they have specificities.",
      "createdAt": "2025-04-16T12:27:50Z",
      "updatedAt": "2025-04-30T08:28:22Z",
      "closedAt": "2025-04-30T08:28:22Z",
      "comments": [
        {
          "author": "epanero-openai",
          "authorAssociation": "NONE",
          "body": "@thibmeu happy to be acknowledged. you can use `Eugenio Panero (epanero@openai.com)` as my name. Thanks!",
          "createdAt": "2025-04-29T18:59:50Z",
          "updatedAt": "2025-04-29T19:00:13Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOOXJyWM6zq4sH",
      "title": "Support for CBOR and COSE Keys",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/10",
      "state": "CLOSED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "There are multiple places where CBOR and CBOR Web keys could be introduced.\n\n1. HTTP Message Signature directory format. I'd be in favor of add `+json` at the end of the directory Media type, so that we can declare `+cbor` when relevant\n2. JSON Web Thumbprint is used as a key id. This is great because it provides a unique key id that is derived from the key material. I'd be in favor of sticking to ONE key id derivation method, even though [RFC 9679](https://www.rfc-editor.org/rfc/rfc9679.html) defines a Thumbprint for COSE Keys.",
      "createdAt": "2025-04-23T15:12:02Z",
      "updatedAt": "2025-06-16T13:08:09Z",
      "closedAt": "2025-06-16T13:08:09Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDOOXJyWM6z9hV0",
      "title": "Consider negative test vectors",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/11",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "This relates to https://github.com/cloudflareresearch/web-bot-auth/issues/4\n\nIt should be fine to limit these vectors to Ed25519 initially.",
      "createdAt": "2025-04-25T07:36:43Z",
      "updatedAt": "2025-05-06T17:12:22Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDOOXJyWM60Pl9N",
      "title": "Consideration around signing Signature-Agent header",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/12",
      "state": "CLOSED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "Vercel [shared](https://mailarchive.ietf.org/arch/msg/web-bot-auth/-ON1BdJMNWZmTgZGshBOHxnTSiQ/) they have been working on a similar proposal on their side.\n\nOne difference is they include the bot origin as part of the signature. In the current draft, this would be signing `Signature-Agent` header.\n\nWith [RFC 9421 Section 2.1](https://datatracker.ietf.org/doc/html/rfc9421#name-http-fields), this can be done by adding `\"signature-agent\"` to the component part of `Signature-Input`.",
      "createdAt": "2025-04-28T07:31:30Z",
      "updatedAt": "2025-04-30T15:22:23Z",
      "closedAt": "2025-04-30T15:22:23Z",
      "comments": [
        {
          "author": "punkeel",
          "authorAssociation": "NONE",
          "body": "I strongly want (-> MUST) `Signature-Agent` to be included in the `Signature-Input` to be considered valid by origins.\n\nAlso, +1 on having this be a signature **component** rather than a brand new header.",
          "createdAt": "2025-04-29T13:53:55Z",
          "updatedAt": "2025-04-29T13:53:55Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "I'll see how to word the fact that \"if there is a Signature-Agent\" header, it MUST be signed. If there is no such header, it's not signed.\n\nAlso forgot to mention this comes from @cramforce, in case they want to weight in.",
          "createdAt": "2025-04-29T14:02:29Z",
          "updatedAt": "2025-04-29T14:02:29Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOOXJyWM60P0gW",
      "title": "Relation to OAuth 2",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/13",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "There has been a couple of feedback about why not use OAuth 2, DPoP, maybe OIDC in general. We should consider having a section in the appendix to address that.\n\nFrom the top of my head:\n* This is similar indeed: one standard which we scope specifically for bots, with a tag/purpose, key ID definition\n* HTTP Message Signatures provides @authority derived component\n* The use of JWK Thumbprint as keyid is sufficient. No need for DPoP\n* DPoP is specifically addressing replay and access refresh\n* The Authorization server is the client, which seems to be closer to HTTP Message Signatures design\n* Extensibility to allow request integrity and non-repudiability with HTTP Message Signatures, possibly with mulitple ones\n",
      "createdAt": "2025-04-28T07:55:30Z",
      "updatedAt": "2025-06-26T16:47:09Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "From @garyillyes on the [mailing list](https://mailarchive.ietf.org/arch/msg/web-bot-auth/JHZcHwwYlOt_y1T_YcENGP5yAnM/): consideration about [SPIFFE](https://spiffe.io/). Trying to recall the differences from the top of my head before i log out for the day and reply on the mailing:\n\n1. I understand SPIFFE as being based on trust domain. Signature-Agent helps with that discovery to avoid a central registry for a public web.\n2. Transitivity is a nice property of HTTP Sigs\n3. There is no binding to a specific authority, or headers, like with HTTP Sigs. This is a nice to have\n4. There is an ongoing thread on [oauth mailing list](https://mailarchive.ietf.org/arch/msg/oauth/3dpBuZqHRxlx33AyTZNUqofnM_0/) about dynamic registration with OAuth using SPIFFE sharing some of the properties\n\nTLDR is registration is covered with Signature-Agent allowing for multiple trust domains. SPIFFE would be interesting to provide that unique workload URL, and possibly identify a specific workload instead of their principals.",
          "createdAt": "2025-06-26T16:36:35Z",
          "updatedAt": "2025-06-26T16:47:09Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOOXJyWM60P13-",
      "title": "Consider `Signature-Agent` header to be more than HTTP Message Signatures directory",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/14",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "At the moment, this is defined as providing an HTTP Message Signatures Directory.\n\nIf OAuth 2 is used as well (should it #13 ?), it could be interesting to have something broader.",
      "createdAt": "2025-04-28T07:57:17Z",
      "updatedAt": "2025-05-19T19:32:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Discussed with @EthanHeilman as it relates to https://github.com/dickhardt/openid-key-binding/ as well.\nOne main difference is that our current draft mandates the kid to be the JWK thumbprint for global uniqueness constraint. This is a similar approach.",
          "createdAt": "2025-04-30T08:03:42Z",
          "updatedAt": "2025-04-30T08:03:42Z"
        },
        {
          "author": "leelynne",
          "authorAssociation": "NONE",
          "body": "Optionally being able to include some proof of public key -> identity or pub in this header generally would be great.\n\nOpenPubKey comes to mind as well - https://github.com/openpubkey/openpubkey\n\nEven as a first party having the option for the client to carry this pubkey -> identity mapping (signed by an authority) is useful.  AWS STS tokens are an example of this - https://medium.com/@TalBeerySec/revealing-the-inner-structure-of-aws-session-tokens-a6c76469cba7\n\n",
          "createdAt": "2025-05-19T19:32:02Z",
          "updatedAt": "2025-05-19T19:32:02Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOOXJyWM62OuIF",
      "title": "Consider integration of `Signature-Agent` with robots.txt",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/19",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "In addition to using User-Agent directive as per [RFC 9309](https://datatracker.ietf.org/doc/html/rfc9309), it would be interesting for robots.txt to support Signature-Agent header.",
      "createdAt": "2025-05-12T15:11:01Z",
      "updatedAt": "2025-06-27T10:44:30Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Discussing with @garyillyes and @gauribaraskar, it seems a good path forward may rather be defining a new IANA registry for Robots.txt directives.\n\nThis way, we can add directives that exist but are not part of RFC 9309, such as\n\n1. [Sitemaps](https://developers.google.com/search/docs/crawling-indexing/robots/robots_txt#sitemap)\n2. [Crawl-delay](https://en.wikipedia.org/wiki/Robots.txt#Crawl-delay_directive)\n\nAnd new directives like\n\n1. Signature-Agent (this issue)\n2. [Max-crawl-rate](https://github.com/thibmeu/http-message-signatures-directory/pull/34)\n3. [User-agent-purpose](https://github.com/garyillyes/ietf-rep-purpose/tree/main)\n\nThis probably should be part of its own repository, given the scope is quite different from solely HTTP Message Signatures.",
          "createdAt": "2025-05-28T09:43:15Z",
          "updatedAt": "2025-05-28T09:43:15Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "One more\n1. [Content-Usage](https://datatracker.ietf.org/doc/html/draft-it-aipref-attachment-00#name-robots-exclusion-protocol-c)",
          "createdAt": "2025-05-29T15:39:08Z",
          "updatedAt": "2025-05-29T15:39:08Z"
        },
        {
          "author": "gauribaraskar",
          "authorAssociation": "NONE",
          "body": "We could also tweak [user-agent-purpose](https://www.ietf.org/archive/id/draft-illyes-rep-purpose-00.html) to signature-agent-purpose. ",
          "createdAt": "2025-05-29T16:56:35Z",
          "updatedAt": "2025-05-29T16:56:35Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "> We could also tweak [user-agent-purpose](https://www.ietf.org/archive/id/draft-illyes-rep-purpose-00.html) to signature-agent-purpose.\n\nThis seems to be going beyond solely having a registry. If there is a clear purpose, it could be added as its own draft, similar to user-agent-purpose. At the moment, it seems Signature-Agent would be sufficient.",
          "createdAt": "2025-05-29T18:10:25Z",
          "updatedAt": "2025-05-29T18:10:25Z"
        },
        {
          "author": "neilstuartcraig",
          "authorAssociation": "NONE",
          "body": "Hello!\nI've spoken with @thibmeu around this and he asked me to add our (BBC) current-known use case. I _think_ this is probably the most appropriate existing issue but please let me know if you want me to move it.\n\nWe have some folks in BBC Studios who are looking at the potential for licensing our content (or subsets of it) for use in various ways e.g. LLM training, paid-for reformatting/summarisation etc.\n\nRight now, we use robots.txt where we can in the usual/standard way but this is a seriously poor whack-a-mole experience from our PoV because:\n\n* Bot documentation quality is extremely variable so it's not always easy/possible to work out what a specific bot's intent (purpose) is\n* Sometimes the intent of a bot changes over time (or there may be multiple intents for a single bot)\n* The User-Agent string isn't necessarily the same as the robots.txt token\n* We end up with loads of robots.txt `disallow` entries which is hard to manage\n\nWhat we'd dearly love is a broader intent-based system (with the intent included in the bot signature) whereby we could e.g. `disallow` all bots which have a stated intent of \"LLM training\" then have specific `allow`-based exceptions to that for any companies with which we have a commercial usage contract. This'd obviously be a divergence from the current robots.txt system which lists per-bot/UA tokens but it would be so much more manageable.\n\nHope all that makes sense!\n\n",
          "createdAt": "2025-06-27T10:44:30Z",
          "updatedAt": "2025-06-27T10:44:30Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDOOXJyWM626Ux_",
      "title": "Add wording that `Signature` header  MUST be sent over a secure connection",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/20",
      "state": "CLOSED",
      "author": "jhoyla",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Because the `Signature` header is effectively a bearer token, and can be proxied, and in some cases replayed, there needs to be a `MUST` requiring that the `Signature` header is always sent (and proxied) over secure (esp. confidential) channels.",
      "createdAt": "2025-05-16T11:28:46Z",
      "updatedAt": "2025-05-20T13:38:17Z",
      "closedAt": "2025-05-20T13:38:17Z",
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "A possible text from [RFC 6750 Section 5.3](https://www.rfc-editor.org/rfc/rfc6750#section-5.3)\n\n> Always use TLS (https):  Clients MUST always use TLS [[RFC5246](https://www.rfc-editor.org/rfc/rfc5246)]\n> (https) or equivalent transport security when making requests with\n> bearer tokens.  Failing to do so exposes the token to numerous\n> attacks that could give attackers unintended access.",
          "createdAt": "2025-05-16T11:32:24Z",
          "updatedAt": "2025-05-16T11:32:24Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "If mandating TLS, we should also refer to [RFC 9421 Section 7.1.2](https://datatracker.ietf.org/doc/html/rfc9421#name-use-of-tls) regarding the use of TLS.",
          "createdAt": "2025-05-16T11:34:20Z",
          "updatedAt": "2025-05-16T11:34:20Z"
        },
        {
          "author": "jhoyla",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We also need text on the use of proxies. Something along the lines of:\n> If forwarding a request containing a `Signature` header to a different party, a proxy MUST either use TLS or equivalent protection to talk to both the sender and receiver, or strip the `Signature` header. Parties that receive a `Signature` header over an unsecured channel MUST drop the header without further processing.\n",
          "createdAt": "2025-05-16T11:40:25Z",
          "updatedAt": "2025-05-16T11:40:25Z"
        },
        {
          "author": "jhoyla",
          "authorAssociation": "CONTRIBUTOR",
          "body": "That language doesn't provide total coverage of course, because a proxy that doesn't understand this protocol will still blindly forward it, so a chain of two non-supporting proxies could expose the token if they don't use TLS, but I think it's the best we can do without explicitly binding to the TLS connection.",
          "createdAt": "2025-05-16T11:44:16Z",
          "updatedAt": "2025-05-16T11:44:16Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOOXJyWM63JxAu",
      "title": "Include a subsection about the agent signing additional headers",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/22",
      "state": "CLOSED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "The existing draft does not preclude signing any additional headers.\n\nIt would be useful to clearly mention it for extensibility purposes.\nThis might have impact on origin verification time, and that has to be considered.\n",
      "createdAt": "2025-05-19T07:18:43Z",
      "updatedAt": "2025-05-20T12:18:22Z",
      "closedAt": "2025-05-20T12:18:22Z",
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDOOXJyWM63J7x-",
      "title": "Clarify the motivation for a company/agent to identify themselves",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/23",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "An assumption in the motivation is that a server WANTS to have a stable identity, given they do already with IP/User-Agents. Cutting out a specific section in the introduction could be relevant around having a stable identity. Note that the mention of rotation does not preclude this, given the identity is the `Signature-Agent`, not the `keyid` derived for the signature.\n\nComment from @martinthomson\n\n> The reason that the server might want to have a stable identity for the agent is another important question to address.  What possible purpose would be served by that?   You need to address that question more directly.\n>\n> One potential answer here is that continuity of identity for the same server allows that server to build up a history of good (or bad) behaviour on behalf of a given agent.  One that acts in a manner that respects server resources and does not attempt attacks might be given more favourable treatment as it builds up that history with the server.\n>\n> Another is that continuity of identity across servers allows agents to build up a reputation across servers.  If the agent is known to one server as being well-behaved, that server can tell other servers and they can collectively treat it better.\n>\n> Both require that the agent identity not be closely correlated with the identity of a person, or we enable tracking.",
      "createdAt": "2025-05-19T07:34:19Z",
      "updatedAt": "2025-05-19T07:34:19Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOOXJyWM63Qttv",
      "title": "Use signature label to identity signature instead of tab",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/24",
      "state": "OPEN",
      "author": "leelynne",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I wanted to suggest using the signature label to identity the signature for validation instead of using the tag. This is also feedback I will give to the http signature spec itself.\n\nThe main reason is because it is valid to have multiple signatures with the same tag but not with the same label. Multiple tags introduces variance between implementations when doing single signature validation and the latter does not.\n\nThe observation is that while there can be multiple signatures present on a request each signature is typically intended for one purpose. In my companies case that purpose is for workload authentication - there should be only one of these for the direct caller.  Similarly Amazon Seller central expects one signature for a request for third-party payment providers [1].\n\nAs an implementer of HTTP signatures [2] we have had to create an interface to allow library users to select the one signature they want to validate and ignore the others.  If you allow them to specify a tag as the selector then the HTTP signatures implementation has to make a choice of how to handle requests with multiple signatures with the same tag.  Take the first one as returned by the parser?  Take the first one ordered by key id? Return an error? Validate them all?\n\nIn contrast each signature must have a unique label (or else it is not valid structured field dictionary [3] and should fail to parse).\n\nIt is still true that signature validators should not assign special meaning to the signature label however as a selector it does exactly what it should do without ambiguity.\n\n\n[1] - https://developer-docs.amazon.com/sp-api/docs/tpp-registration-signature-guidance\n[2] - https://github.com/remitly-oss/httpsig-go\n[3] - https://www.rfc-editor.org/rfc/rfc8941#name-dictionaries\n",
      "createdAt": "2025-05-19T17:55:18Z",
      "updatedAt": "2025-05-20T12:08:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Is the idea that labels are simpler to filter on?\n\nI have the impression that we could ask for a label to be put, but I'm not sure the function is the same as a tag. A tag can be used as a filter, even if there are multiple signatures. This is a desirable subset of HTTP Message Signatures.\n\nI agree that it defers the decision to select signatures to implementers. In some cases, being able to select multiple signatures is actually desirable.\n\nEach company can decide to put a unique identifying label. This is what [AWS seems to do](https://developer-docs.amazon.com/sp-api/docs/tpp-registration-signature-guidance) with label `x-amzn-psd2`.\n\nAlso, as @jricher mentioned on [web-bot-auth](https://mailarchive.ietf.org/arch/msg/web-bot-auth/lFJ5GKrFAKHL9qF6oAtTPv8TLMQ/) mailinglist, labels are not included in the signing material. This is a property we would like to have proper bindings.",
          "createdAt": "2025-05-20T12:08:21Z",
          "updatedAt": "2025-05-20T12:08:21Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOOXJyWM63l2ay",
      "title": "Consider describing chaining",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/27",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Chaining should be possible with the draft as it stand.\n\n1. Off path, use x5c field of the JWK\n2. On path, pass the directory base64 encoded within Signature-Agent header with a JWK containing x5c.\n\nThe use case seems to be required by a message on [web-bot-auth](https://mailarchive.ietf.org/arch/msg/web-bot-auth/azPrcKBzKpdnAKJG8-ZpPN1WD04/) list. If there is interest, we should consider fleshing it out as its own section.",
      "createdAt": "2025-05-21T12:57:07Z",
      "updatedAt": "2025-06-19T09:13:01Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "A dedicated section with multiple examples has been added. There is no concensus nor strong opinion yet on which option should be favored. All of them are supported by existing JWKS standard, and it's a matter of if and how we want to restrict them.",
          "createdAt": "2025-06-19T09:13:01Z",
          "updatedAt": "2025-06-19T09:13:01Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOOXJyWM6370Zd",
      "title": "TLS 1.2 reference",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/30",
      "state": "CLOSED",
      "author": "loganaden",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "The I-D references TLS 1.2 as the recommended transport:\n\n\"We reassess {{Section 7.1.2 of HTTP-MESSAGE-SIGNATURES}}. Clients SHOULD use TLS {{RFC5246}} (https) or equivalent transport security when making requests with Message signatures.\"\n\nIs there anything preventing TLS 1.3 from being recommended instead ?\n\n",
      "createdAt": "2025-05-23T10:19:26Z",
      "updatedAt": "2025-05-24T05:33:13Z",
      "closedAt": "2025-05-24T05:33:13Z",
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Nothing blocking TLS 1.3. That's a good catch, we should recommend it.",
          "createdAt": "2025-05-23T11:12:27Z",
          "updatedAt": "2025-05-23T11:12:27Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Closed in #31 ",
          "createdAt": "2025-05-24T05:33:13Z",
          "updatedAt": "2025-05-24T05:33:13Z"
        }
      ]
    },
    {
      "number": 32,
      "id": "I_kwDOOXJyWM638OCA",
      "title": "Multiple FQDN in `Signature-Agent` header",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/32",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "Relates to #27 \n\nWhen a request is signed by multiple parties, it would be good for the request to contain all the keys. This can be done via delegation, or this could be done by providing multiple signature and signature-agent.\n\nUser-Agent have multiple product component. Here, we would have multiple directory component.\n\nFor example\n\n```\nSignature-Agent: forward-proxy.example.com myservice.example.com\n```",
      "createdAt": "2025-05-23T11:04:14Z",
      "updatedAt": "2025-05-23T11:05:05Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 35,
      "id": "I_kwDOOXJyWM66leH8",
      "title": "Add HTTP Status Code Specifications for Signature Verification Errors",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/35",
      "state": "CLOSED",
      "author": "gauribaraskar",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Since web bot auth architecture is an application of HTTP Message Signatures, as defined in [RFC 9421 section 1.4](https://www.rfc-editor.org/rfc/rfc9421#section-1.4), the draft should specify appropriate HTTP status codes for signature verification failures. Currently, section 4.4 references the verification algorithm but doesn't specify what status codes origins should return for different failure scenarios. \n\nWe could add a new section specifying appropriate HTTP status codes for different failure scenarios:\n1. 401 Unauthorized: Missing/invalid/expired signatures, unknown keyid\n2. 403 Forbidden: Valid signature but access denied by policy\n3. 400 Bad Request: Malformed headers, missing required components, invalid tag, reusing nonce\n",
      "createdAt": "2025-06-09T13:53:04Z",
      "updatedAt": "2025-06-12T12:10:47Z",
      "closedAt": "2025-06-12T12:10:47Z",
      "comments": []
    },
    {
      "number": 36,
      "id": "I_kwDOOXJyWM66xTMS",
      "title": "Add Key binding consideration in directory draft",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/36",
      "state": "CLOSED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "It could be useful for keys to be binded to a domain. There are multiple approaches that could be used, and I'm not sure which one should be mandated, if any. Possible approaches I see at the moment\n\n1. /.well-known/... to be served with one/more HTTP Message Signature over the digest and `@authority` \n2. have a challenge mechanism for updates/key liveness\n3. have an identity string as part of JWK. It could be via x5c if leveraging certificates associated to a signature-agent, or a new field\n4. Require bots to register their keys as part of a global root (similar to webpki)\n\nIt would be great if these process allow for key mirroring.",
      "createdAt": "2025-06-10T12:52:52Z",
      "updatedAt": "2025-06-16T09:33:43Z",
      "closedAt": "2025-06-16T09:33:43Z",
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "body": "Can you clarify what the goal is in binding a key to a domain? If to associate some well known identity to the bot: is domain always an appropriate form of identity?\n",
          "createdAt": "2025-06-12T16:48:20Z",
          "updatedAt": "2025-06-12T16:48:20Z"
        },
        {
          "author": "jhoyla",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think 1 could be fine, assuming the domain is also in the signed portion.",
          "createdAt": "2025-06-12T16:50:05Z",
          "updatedAt": "2025-06-12T16:50:05Z"
        },
        {
          "author": "jhoyla",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Maybe realm is more flexible than domain?",
          "createdAt": "2025-06-12T16:50:40Z",
          "updatedAt": "2025-06-12T16:50:40Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "The goal of binding to a domain is to ensure that when consuming a directory, you still preserve the domain it was served from.\n\nIf you have two bots a and b with keyA and keyB, bot b may serve keyA in its directory.\nAnd when validating keyA, you may be unable to tell if it's the key of bot a or bot b, even though only bot a is able to produce such signatures.\n\nTherefore you need a binding to ensure keyA is always associated to bot a\n\n\nThis is specific to the directory, therefore using domains. The architecture works with keyid that a client trusts. You can define other retrieval mechanism that would work fine as long as you have confidence that the key uniquely identifies a bot.",
          "createdAt": "2025-06-12T16:54:32Z",
          "updatedAt": "2025-06-12T16:54:32Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "body": "Option 1 seems reasonable to me.",
          "createdAt": "2025-06-12T18:44:53Z",
          "updatedAt": "2025-06-12T18:44:53Z"
        }
      ]
    },
    {
      "number": 38,
      "id": "I_kwDOOXJyWM66-gHa",
      "title": "Signature-Agent is a string structured field",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/38",
      "state": "CLOSED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "bug"
      ],
      "body": "This is how the directory draft defines it.\n\nAs pointed out by @AkshatM, the architecture draft provides incorrect examples, and does not escape the string as required by [Section 3.3.3 of RFC8941](https://www.rfc-editor.org/rfc/rfc8941#name-strings).\n\nWe should correct it.\n\nThis includes regenerating test vectors\n",
      "createdAt": "2025-06-11T13:58:19Z",
      "updatedAt": "2025-06-12T07:54:52Z",
      "closedAt": "2025-06-12T07:54:52Z",
      "comments": []
    },
    {
      "number": 43,
      "id": "I_kwDOOXJyWM67YoAW",
      "title": "Security consideration regarding semantically equivalent field values",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/43",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "HTTP Message Signatures relies on strwuctured field to canonicalise an HTTP request.\nStructured fields allow for two different inputs to be canonicalised to the same string.\n\nThere are considerations around this in HTTP Message Signatures [RFC 9421, Section 7.5.2](https://www.rfc-editor.org/rfc/rfc9421#section-7.5.2).\n\nAt minimum, the architecture draft has to restate these.\n\nThere is an open question if the architecture should place additional rules which are not part of HTTP Message Signatures.",
      "createdAt": "2025-06-13T14:37:28Z",
      "updatedAt": "2025-06-13T14:37:28Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 44,
      "id": "I_kwDOOXJyWM67b6M4",
      "title": "Binding a public key to an identity possible with x5c chaining (rogue key attacks)",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/44",
      "state": "OPEN",
      "author": "EthanHeilman",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This may not be a concern for this use case  but wanted to make a note of it.\n\nSince the JWK isn't covered by the HTTP message signature it is possible to do a rogue key attack where you associate someone else's public key with your own identity. These attacks don't break signature forgability because you aren't able to create new signatures under that key, but there are cases in some protocols where the confusion between public key and identity may result in harm.\n\n1. See JWK and HTTP signature for identity example.com\n2. Sign x509 cert for evil.com with public key from JWK and replay HTTP signature.\n\nThe replay attack doesn't violate your security model, but someone might be able to bind a public key which they don't know the signing key for to their identity. I don't think the x509 format protects against rogue keys, but I could be wrong",
      "createdAt": "2025-06-13T20:11:43Z",
      "updatedAt": "2025-06-13T20:11:43Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 45,
      "id": "I_kwDOOXJyWM68IU-v",
      "title": "Directory endpoint should support nonce signing",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/45",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "When a client fetches a directory endpoint on `/.well-known/...`, the directory signs the `@authority` with every keys.\n\nIt'd be interesting to have a `nonce` be signed, with the nonce provided by the client. It would ensure ownership of the domain.\n\nThere are security considerations, given the directory has to dynamically sign client input instead of serving a static resources.\n\nThere are likely other mechanism to consider. We should understand if this is an issue shared among bots and verifiers, and if the solution seems amenable.",
      "createdAt": "2025-06-18T10:17:18Z",
      "updatedAt": "2025-06-18T10:17:18Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 46,
      "id": "I_kwDOOXJyWM68lJtZ",
      "title": "Interaction with CORS headers",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/46",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "bug",
        "question"
      ],
      "body": "How does HTTP Message sigs interact with CORS and preflight?\n\nfrom @sandormajor",
      "createdAt": "2025-06-20T16:37:40Z",
      "updatedAt": "2025-06-20T16:37:48Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 47,
      "id": "I_kwDOOXJyWM6-5T2P",
      "title": "Add known test key SHOULD be rejected in considerations",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/47",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "RFC 9421 provides test keys in [Appendix B.1](https://www.rfc-editor.org/rfc/rfc9421.html#name-example-keys).\n\nIt would be ideal for security consideration/deployment consideration to mention that such keys SHOULD be rejected or notified to the client.\n\nThe correct mechanism to do this may not be straight forward.",
      "createdAt": "2025-07-04T13:06:21Z",
      "updatedAt": "2025-07-04T13:06:21Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 49,
      "id": "I_kwDOOXJyWM7DIz2i",
      "title": "Signature Agent card",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/49",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "There has been a couple of mention to draft a way to share information about a specific bot/signature-agent.\n\nThis could take the form of a signature-agent card.\n\nIt would contain information about the service, its name, description, key directory, expected crawl rate, type of traffic.\n\nIt is high level at the moment, adding this ticket as a placeholder.",
      "createdAt": "2025-07-29T14:25:52Z",
      "updatedAt": "2025-09-09T17:12:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "punkeel",
          "authorAssociation": "NONE",
          "body": "I support the idea of a standardized friendly bot card, and would suggest including the following fields:\n\n\nField | Description | Example / Notes\n-- | -- | --\nFriendly name | Human-readable bot name | `Googlebot`, `Facebook External Hit`\nContact method | Email or other reliable communication channel | `bot-support@example.com`, `https://.../contact`\nLogo | Optional image for quick visual identification | PNG/SVG URL, 64x64\nExpected user agent(s) | Exact string(s) or fragment patterns | `Googlebot/`\nrobots.txt identifier | Name(s) used for robots.txt directives | `Googlebot\nRespects robots.txt? | Does the bot follow robots.txt directives? | `true` / `false`\nTrigger mechanism | Whether it acts as a fetcher (requested by user) or crawler (autonomous scanning) | Fetcher = on-demand preview; Crawler = site-wide scan\nPurpose | Intended use for collected data | Search indexing, link preview, AI model training\nTargeted content | Specific type of data sought | SEO analysis, vulnerability scanning, ads verification\nTraffic control | How to configure or limit crawl rate | Crawl-delay in robots.txt, contact request, link to Google Webmaster Tools, response header\nTraffic scope | Typical frequency/intensity of requests | ~500 req/day; spikes during reindexing\nKnown URL targets | Predictable endpoints accessed, if known | `/ads.txt`, `/favicon.ico`, `/.well-known/something/...`\n\n",
          "createdAt": "2025-08-21T15:06:09Z",
          "updatedAt": "2025-08-21T15:06:09Z"
        },
        {
          "author": "ulaskira",
          "authorAssociation": "NONE",
          "body": "Nice. And where do you imagine this being hosted and made discoverable? One possibility is that a field in the key directory entry points to a url with this content in JSON. (See related discussion in https://mailarchive.ietf.org/arch/msg/web-bot-auth/BD1UvNzSX-DfN1uFe_weOjd9GRY/)",
          "createdAt": "2025-08-30T00:19:35Z",
          "updatedAt": "2025-08-30T00:19:35Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "I've added all these considerations into a WIP draft on branch [registry-draft](/thibmeu/http-message-signatures-directory/tree/registry-draft). The rendered draft is accessible on the repo [Github Pages](https://thibmeu.github.io/http-message-signatures-directory/registry-draft/draft-meunier-webbotauth-registry.html).\n\nFor discovery, there are likely improvements to be made on the signing part to ensure the directory is correctly linked to the keys.\nAnother open question I have is if metadata should be an extension of the existing JWKS directory, or have their own dedicated endpoint.",
          "createdAt": "2025-09-02T08:28:08Z",
          "updatedAt": "2025-09-02T08:28:08Z"
        },
        {
          "author": "ulaskira",
          "authorAssociation": "NONE",
          "body": "Thanks Thibault. I am trying to understand how Signature Agent Card interacts with Signature Agent. Is this an alternative to Signature Agent that includes both the agent card and the key (vs Signature Agent that only includes the key)? So an agent would use one or the other header based on whether they want to have a model card or just key?",
          "createdAt": "2025-09-03T17:25:47Z",
          "updatedAt": "2025-09-03T17:25:47Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "I think of it has an extension. The format is extending the directory.\n\nRegarding what the agent would use, this would likely be a modification of the architecture draft. I think having a distinct header is helpful, because your metadata may not rotate as often as your keys. However, that should not prevent the Signature-Agent to hold all the metadata already.\n\nSuggestion welcome, this is very much a first pass so we have a shared basis for discussion.",
          "createdAt": "2025-09-05T08:07:45Z",
          "updatedAt": "2025-09-05T08:07:45Z"
        },
        {
          "author": "ulaskira",
          "authorAssociation": "NONE",
          "body": "I see, so you mean it is the same container described in https://datatracker.ietf.org/doc/html/draft-meunier-web-bot-auth-architecture#name-key-distribution-and-discov but you are defining more entries at the top level of the signature agent, at the same level as \"keys\"? And using these keys is optional (hence \"extension\")?",
          "createdAt": "2025-09-09T16:35:19Z",
          "updatedAt": "2025-09-09T16:35:19Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "You're correct.\nRegarding section 4.5, the extra parameters have been removed from the directory spec and moved to the registry spec with comments from #53. You can see the latest version on [GitHub pages](https://thibmeu.github.io/http-message-signatures-directory/draft-meunier-web-bot-auth-architecture.html#name-key-distribution-and-discov).\n\nThe current version is that the directory re-uses JWKS directory definition as is, and all external parameters are in the registry draft.",
          "createdAt": "2025-09-09T17:12:14Z",
          "updatedAt": "2025-09-09T17:12:14Z"
        }
      ]
    },
    {
      "number": 52,
      "id": "I_kwDOOXJyWM7I-4fd",
      "title": "HTTP Message signature to allow filtering based on key thumbprint",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/52",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "HTTP Message signature directory may contain a lot of keys.\n\nFor certain use cases, proviing optional query parameter to allow the server to return only a specific key would be great.\n\nFilters may include:\n* JWK Thumbprint\n* kid\n* type\n* expiresAfter\n* ...\n\nThis may be an additional draft, given the media type and signature requirement would remain the same.\n\ncc @ThisIsMissEm",
      "createdAt": "2025-09-01T09:20:52Z",
      "updatedAt": "2025-09-05T08:37:06Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ThisIsMissEm",
          "authorAssociation": "NONE",
          "body": "Ah, cool, thanks \u2014 I somehow missed that there was an issue tracker yesterday ",
          "createdAt": "2025-09-01T10:32:35Z",
          "updatedAt": "2025-09-01T10:32:59Z"
        },
        {
          "author": "ThisIsMissEm",
          "authorAssociation": "NONE",
          "body": "I'd probably at minimum support filtering by kid, since that's what you're using to identify the key in HTTP Message Signatures",
          "createdAt": "2025-09-01T10:34:03Z",
          "updatedAt": "2025-09-01T10:34:03Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "None of the draft is using `kid` to identify the keys in HTTP Message Signatures. Both draft rely on a deterministic base64 encoded JWK Thumbprint.\n\nTrying to explore possible solutions:\n1. I think having a dedicated path to allow for filtering would be nice. A query may be misleading as the server may not support filtering\n2. Filtering should be limited to registered [IANA JSON Web Parameters](https://www.iana.org/assignments/jose/jose.xhtml#web-key-parameters)\n3. Given we need filtering based on a thumbprint and thumbprint are not IANA JSON Web Parameters, I'd suggest we register one\n\nAll this would lead to something like this example\n\n```\n/.well-known/http-message-signatures-directory - the full directory\n/.well-known/http-message-signatures-directory/:jwk-attribute/:exact-value\n```",
          "createdAt": "2025-09-05T08:37:06Z",
          "updatedAt": "2025-09-05T08:37:06Z"
        }
      ]
    },
    {
      "number": 53,
      "id": "I_kwDOOXJyWM7JTOaP",
      "title": "Clarify or remove \"purpose\" in/from section 4.5., Key Distribution and Discovery",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/53",
      "state": "CLOSED",
      "author": "garyillyes",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "There's a new \"purpose\" field in the example key in [section 4.5., Key Distribution and Discovery](https://www.ietf.org/archive/id/draft-meunier-web-bot-auth-architecture-03.html#name-key-distribution-and-discov).\n\nThe field should be either: \n1. clarified and properly referenced (e.g., ai-pref drafts), or\n2. removed, because considering that once the request is signed the rest of the headers can be de-facto trusted, so perhaps the \"purpose\" field should be outside the JSON \n\nAlternatively, the language in the section should be phrased as an example, such as `Implementers MAY add new fields from a IANA registry to the <JSON>; for example, \"purpose\" in the following example.`\n\nIMO it should be removed. It's unclear that the existence of this field is useful in the key, instead, the purpose of a client should be advertised in other headers (and hopefully WG ai-pref will deal with that)",
      "createdAt": "2025-09-02T19:34:33Z",
      "updatedAt": "2025-09-05T08:04:54Z",
      "closedAt": "2025-09-05T08:04:54Z",
      "comments": [
        {
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "body": "Re option 2: I would not rely on a defacto trust, I think if a new header is added then it will need to be signed by the agent as well. I would maybe even note it somewhere that the verifier should not trust unsigned parts of the message.\n\nOtherwise I agree that the purpose field in the key file is a bit odd and can also be confused with the `use` field that \"[identifies the intended use of the public key](https://datatracker.ietf.org/doc/html/rfc7517#section-4.2)\". It can be an easy way to share some information about a particular agent, instead of sending it over on every request and signing it, but it might make sense to discuss in a separate document. That doc could go into the details of how it's linked with aipref, what are the available options, provide examples, etc. I saw for instance in some key files very broad purposes like \"ai\" \u2013 if these are not defined somewhere then I think the utility of this field will not be too high.",
          "createdAt": "2025-09-03T03:23:03Z",
          "updatedAt": "2025-09-03T03:23:03Z"
        },
        {
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "body": "On a related note: [section 5.6. Key Reuse Considered Harmful](https://www.ietf.org/archive/id/draft-meunier-web-bot-auth-architecture-03.html#name-key-reuse-considered-harmfu) also refers to \"purposes\" but it seems to be different from the one in the `purpose` field. E.g. I can have two agents that both have the `purpose` of `rag` but one has the \"purpose\" of finding me code, the other is to help me find plane tickets. So should I create a single key for all my rag or I must not reuse it?\n\nFor very large scale systems it might also not be feasible to issue a new identity for every service that might send web requests. If it's a must to issue fine grained identities then I would prefer the SPIFFE-style naming where the workload's identity is in the path and not the domain.\n\nIn general, I think the protocol should not prescribe how to shard or group various identities. It's good to highlight the risks of using a mega identity for everything, or to provide guidelines/examples, but requesting it as a must might not work in practice. Or at least it would require a good definition of a \"purpose\".",
          "createdAt": "2025-09-03T03:56:24Z",
          "updatedAt": "2025-09-03T03:56:24Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Agree that `\"purpose\"` field should probably should be removed from the directory draft. I've openned #55\n\nFor @sandormajor comment on the `keys MUST NOT be used for different purposes`, I'm proposing we update it to `keys SHOULD NOT be used for different purposes`, which is more in line with `Security guidelines`.\n\nOn the side, and following discussions in #49, there seems to be interest to provide some guidelines to share metadata associated to a signature agent. These metadata include the `purpose` field within an IANA registry. We are currently drafting something on [registry-draft](https://github.com/thibmeu/http-message-signatures-directory/tree/registry-draft) branch, with a [rendered draft](https://thibmeu.github.io/http-message-signatures-directory/registry-draft/draft-meunier-webbotauth-registry.html). To be sent to the mailing soonish.",
          "createdAt": "2025-09-03T09:14:20Z",
          "updatedAt": "2025-09-03T09:14:20Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "I_kwDOOXJyWM7JXCJK",
      "title": "Clarification on 5.7.  Reverse proxy consideration",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/54",
      "state": "CLOSED",
      "author": "sandormajor",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "[5.7. ](https://www.ietf.org/archive/id/draft-meunier-web-bot-auth-architecture-03.html#section-5.7)[Reverse proxy consideration](https://www.ietf.org/archive/id/draft-meunier-web-bot-auth-architecture-03.html#name-reverse-proxy-consideration) says \"It implies that the proxy sees the Signature before the origin does, may strip it, or even attempt to replay it against other reverse proxies used by the origin.\"\n\n1) I think this should have something like \"proxies SHOULD NOT (or MUST NOT) strip the `Signature` and `Signature-Agent` headers\"\n2) Can you please elaborate on \"[Origins may require a specific nonce policy](https://www.ietf.org/archive/id/draft-meunier-web-bot-auth-architecture-03.html#name-reverse-proxy-consideration:~:text=Origins%20may%20require%20a%20specific%20nonce%20policy)\"? Maybe linking to [5.3. ](https://www.ietf.org/archive/id/draft-meunier-web-bot-auth-architecture-03.html#section-5.3)[Nonce validation](https://www.ietf.org/archive/id/draft-meunier-web-bot-auth-architecture-03.html#name-nonce-validation) is enough but an example could be helpful too.\n3) \"to prevent such malicious behaviour\" implies that the nonce can prevent both replay of the signatures, and the striping of them. They can help with replays but if the proxy strips the signature the best an origin can do is to reject the request with an `accept-signature` response, and maybe provide a nonce itself to challenge the agent. But that would require an extra roundtrip. So I think for striping we should at least have some wording like in point 1",
      "createdAt": "2025-09-03T04:30:17Z",
      "updatedAt": "2025-09-09T16:53:49Z",
      "closedAt": "2025-09-09T16:53:49Z",
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "1. agree. I think we could also mention more clearly that intermediaries MAY add extra signature\n2. even though a client generates a random nonce, an origin may want specific freshness, or for the nonce to be derived from certain parameters (the current date, the previous nonce, others)\n3. the sentence indeed implies a second round trip with accept-signature. probably worth adding\n\nI've opened #56 to address these with specific wording proposals",
          "createdAt": "2025-09-03T09:58:56Z",
          "updatedAt": "2025-09-03T09:58:56Z"
        },
        {
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "body": "Thank you! I'm taking a look",
          "createdAt": "2025-09-03T21:28:46Z",
          "updatedAt": "2025-09-03T21:28:46Z"
        }
      ]
    },
    {
      "number": 60,
      "id": "I_kwDOOXJyWM7KlUFz",
      "title": "Consider a mechanism for identifiers (and abuse reporting)",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/60",
      "state": "OPEN",
      "author": "chhamilton",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Consider the following two examples:\n\n(1) A single customer spins up 1000 instances of an agent to automate actions against ticketseller.com to try to buy tickets to a concert for resale.\n(2) 1000 customers each spin up 1 instance of an agent to automate actions against ticketseller.com to try to buy tickets to a concert for personal use.\n\nThese both look indentical to ticketseller.com (or its designated security service provider). While there's some amount of responsibility of the agent platform to try restrict abuse of their platform, security platforms also have their role to play. If these standards provide the ability for each signatory (in this case the platform operator) to encode a pseudonymous customer identifier, it makes it easy to distinguish between (1) and (2). It also enables downstream security service providers to build per-customer reputation tracking. For the purposes of anti-abuse it's fine for these to be pseudonymous, and to rotate with some mid-term frequency (O(weeks) is probably fine)?\n\nThis also creates the ability for collaborative policing. You could imagine creating an abuse reporting endpoint (can be advertised by the platform operator's metadata in their .wellknown file) where websites and/or security providers can inform the platform operator of abusive actions that were made against a site. Having a well defined identifiers allows them to reference specific actions made by their platform.\n\nIf a pseudonymous customer identifier is too much to ask for, at the very least an anonymous session identifier could play the role of grouping together semantically related requests as well as providing an identifier for abuse reporting.\n\nFor abuse reporting, I was thinking of something spiritually similar to ARF for spam email.",
      "createdAt": "2025-09-09T14:40:14Z",
      "updatedAt": "2025-09-09T17:55:48Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 61,
      "id": "I_kwDOOXJyWM7KmVue",
      "title": "Nonce negotiation",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/61",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "Consider having a protocol to negotiate nonce between client and server",
      "createdAt": "2025-09-09T15:59:05Z",
      "updatedAt": "2025-09-09T15:59:05Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 62,
      "id": "I_kwDOOXJyWM7K2r9x",
      "title": "Support registries linking to registries",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/62",
      "state": "OPEN",
      "author": "AkshatM",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "The proposed specification for registries only allows linking to signature agent cards directly, which means all registries are stand alone and disconnected. \n\nRegistries should be able to link to other registries, allowing for a trust web that may allow some registries to become authoritative. This has benefits:\n\n1. If a registry is compromised, an authoritative registry may revoke trust in it.\n2. Today, identity binding is not solved, but an authoritative registry may detect conflicts in identities bound to signature agents by smaller registries. \n\n",
      "createdAt": "2025-09-10T17:48:56Z",
      "updatedAt": "2025-09-12T13:59:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Agree this seems to be a direction worth exploring.\n\nThere probably should be consideration for performance. Why link to another registry rather than hosting a webserver with symlinks for instance.",
          "createdAt": "2025-09-12T13:59:09Z",
          "updatedAt": "2025-09-12T13:59:09Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "I_kwDOOXJyWM7LGDtu",
      "title": "Registry format should support empty lines and comment",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/issues/63",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "This is a consideration. A registry could include comment lines and empty lines.\n\n```\n### The examples\nhttps://example.com/.well-known/http-message-signatures-directory\n\n### Even more examples\nhttps://more.example.com/jwks.json\nhttps://more.more.example.com/path/to/signature/agent/card.json\n```",
      "createdAt": "2025-09-11T16:53:33Z",
      "updatedAt": "2025-09-13T07:35:54Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOOXJyWM6SQlLt",
      "title": "First pass - mostly motivation adjustments",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/1",
      "state": "CLOSED",
      "author": "smhendrickson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-11T13:17:32Z",
      "updatedAt": "2025-04-15T15:53:31Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "32d3cf4056ff5df2347be885a671c47e8608f300",
      "headRepository": "smhendrickson/http-message-signatures-directory",
      "headRefName": "firstpass",
      "headRefOid": "45f502bf4e3f3f669e718c2a275c84e1f3fbe4f2",
      "closedAt": "2025-04-15T15:53:30Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "smhendrickson",
          "authorAssociation": "NONE",
          "body": "Note I renamed this from Automated Agent to agent. I think the `Automation` term blurs intent, and is orthogonal to the purpose of this mechanism.",
          "createdAt": "2025-04-11T13:19:08Z",
          "updatedAt": "2025-04-11T13:19:08Z"
        },
        {
          "author": "smhendrickson",
          "authorAssociation": "NONE",
          "body": "Closing given additions in https://github.com/thibmeu/http-message-signatures-directory/commit/7291dbaa11116b4885574d5c60324d7d7f35278e",
          "createdAt": "2025-04-15T15:53:30Z",
          "updatedAt": "2025-04-15T15:53:30Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOOXJyWM6Sse_X",
      "title": "Add Scott as Author",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/2",
      "state": "CLOSED",
      "author": "smhendrickson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Given the changes added in \nhttps://github.com/thibmeu/http-message-signatures-directory/commit/7291dbaa11116b4885574d5c60324d7d7f35278e",
      "createdAt": "2025-04-15T15:56:09Z",
      "updatedAt": "2025-04-15T18:45:18Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "d5d43299bd09efa98995bba50f6fccecca19a343",
      "headRepository": "smhendrickson/http-message-signatures-directory",
      "headRefName": "author",
      "headRefOid": "777209bf40a2c79e52c793d321333d33ebb54638",
      "closedAt": "2025-04-15T18:45:17Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "smhendrickson",
          "authorAssociation": "NONE",
          "body": "After discussion we are going to use the acknowledgements section until more significant contrib is made. The changes in https://github.com/thibmeu/http-message-signatures-directory/commit/7291dbaa11116b4885574d5c60324d7d7f35278e were mostly editorial, with the exception of Accept-Signatures",
          "createdAt": "2025-04-15T18:45:17Z",
          "updatedAt": "2025-04-15T18:45:17Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOOXJyWM6StJqU",
      "title": "Changes nonce from 32-bit number to string of base64 bytes",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/3",
      "state": "MERGED",
      "author": "EthanHeilman",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR changes the nonce from a 32-bit number to a string containing base64 encoded bytes.\r\n\r\nMy rationale is:\r\n\r\n1. Not fixing the size of the nonce enables signers to avoid nonce collisions by selecting the nonce from a larger space.\r\n2. [RFC 9421 HTTP Message Signatures Section-5.1](https://www.rfc-editor.org/rfc/rfc9421#section-5.1) allows the verifier to specify in the Accept-Signature header the nonce a signer must use in the signature they generate. Existing code may not assume this nonce is limited to 32-bits.\r\n3. RFC 9421 uses strings of base64 encoded bytes in the examples for nonces so this limitation would be unexpected.\r\n4. It allows for the use of signed or otherwise authenticated nonces such as those generated by a random beacon.\r\n\r\nPerhaps we shouldn't limit this to strings of base64 encoded bytes. RFC 9421 defines the nonce as just a string defining it as:\r\n\r\n> nonce:  A random unique value generated for this signature as a String value.\r\n\r\nWhat do you think @thibmeu?\r\n\r\n\r\n",
      "createdAt": "2025-04-15T17:17:15Z",
      "updatedAt": "2025-04-16T12:26:17Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "d5d43299bd09efa98995bba50f6fccecca19a343",
      "headRepository": "EthanHeilman/http-message-signatures-directory",
      "headRefName": "patch-1",
      "headRefOid": "fe72a1442f6a23525049f9ea1f71e3ae1555a099",
      "closedAt": "2025-04-16T12:26:16Z",
      "mergedAt": "2025-04-16T12:26:16Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "9a4c04a35401c2017d1b0bc463029b832f6b1f9d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6lM847",
          "commit": {
            "abbreviatedOid": "4a7c51b"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "This is a good point! uint32 might be restrictive, and is not needed for the security of the protocol.\r\n\r\nAdded a suggestion about using byte-array instead of string, and a specific recommended size",
          "createdAt": "2025-04-16T08:27:17Z",
          "updatedAt": "2025-04-16T08:30:02Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n: base64url encoded random byte array. It is RECOMMENDED to use a 64-byte array.\r\n```\r\n\r\nI prefer byte array because there is no consideration about the string encoding (ASCII, UTF-8, others). It's likely more generic.\r\n\r\nI think providing a concrete suggestion for the nonce size should help for implementation. `64-byte` sounds good enough, but open for suggestions.",
              "createdAt": "2025-04-16T08:27:18Z",
              "updatedAt": "2025-04-16T08:30:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6lPkAT",
          "commit": {
            "abbreviatedOid": "4a7c51b"
          },
          "author": "EthanHeilman",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-16T12:23:40Z",
          "updatedAt": "2025-04-16T12:23:40Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "That makes sense to me",
              "createdAt": "2025-04-16T12:23:40Z",
              "updatedAt": "2025-04-16T12:23:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6lPlen",
          "commit": {
            "abbreviatedOid": "fe72a14"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "This is much better. Thanks for the prompt and fix!",
          "createdAt": "2025-04-16T12:25:52Z",
          "updatedAt": "2025-04-16T12:25:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOOXJyWM6S0Oua",
      "title": "Add text on other reasons a server might request a signature.",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/6",
      "state": "MERGED",
      "author": "jhoyla",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The draft mentions that a server might request a signature if a nonce isn't present in the original request. This adds text mentioning other potential cases that may come up.",
      "createdAt": "2025-04-16T10:24:14Z",
      "updatedAt": "2025-04-16T15:31:24Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "9a4c04a35401c2017d1b0bc463029b832f6b1f9d",
      "headRepository": "jhoyla/http-message-signatures-directory",
      "headRefName": "jhoyla/update-sig-acc-reasons",
      "headRefOid": "8aac1314d93cc206a7c69fd9ff6ddd49fb035676",
      "closedAt": "2025-04-16T15:31:24Z",
      "mergedAt": "2025-04-16T15:31:24Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "5a253b6550023975456e0cd6be41fc7c16d20d0d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6lPou9",
          "commit": {
            "abbreviatedOid": "fd3c3c3"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-16T12:30:07Z",
          "updatedAt": "2025-04-16T12:30:08Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nOrigin MAY request a new signature with tag \"web-bot-auth\" even if a nonce is provided, for example if it believes the nonce is a replay, or if it doesn't store nonces and thus requests new signatures every time.\r\n```",
              "createdAt": "2025-04-16T12:30:07Z",
              "updatedAt": "2025-04-16T12:30:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOOXJyWM6TA6B5",
      "title": "Correct reference for @authority",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/9",
      "state": "MERGED",
      "author": "jhoyla",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Reference points to Section 2.2.1 ([Method](https://www.rfc-editor.org/rfc/rfc9421#section-2.2.1)), but authority is defined in 2.2.3 ([Authority](https://www.rfc-editor.org/rfc/rfc9421#section-2.2.3)).",
      "createdAt": "2025-04-17T16:20:06Z",
      "updatedAt": "2025-04-17T17:44:13Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "5a253b6550023975456e0cd6be41fc7c16d20d0d",
      "headRepository": "jhoyla/http-message-signatures-directory",
      "headRefName": "jhoyla/fix-auth-ref",
      "headRefOid": "115eaaf5bdc416f26803e47f53634fceb57bd266",
      "closedAt": "2025-04-17T17:44:13Z",
      "mergedAt": "2025-04-17T17:44:13Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "3cf7309bb499f26df35e7de1ad2710796cac6df2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6lfk7p",
          "commit": {
            "abbreviatedOid": "115eaaf"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Good catch",
          "createdAt": "2025-04-17T17:44:06Z",
          "updatedAt": "2025-04-17T17:44:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOOXJyWM6Udviw",
      "title": "Recommend the inclusion of Signature-Agent within Signature-Input",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/15",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Signs Signature-Agent header as part of the request. This is only a recommendation, as some agents may not have a directory exposed via HTTP for instance.\r\n\r\nCloses #12\r\n\r\ncc @punkeel @cramforce",
      "createdAt": "2025-04-30T08:28:48Z",
      "updatedAt": "2025-04-30T15:23:43Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "ab0d135fbe8ec694562f4f81540e769fbe003837",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "fix-12",
      "headRefOid": "89512ac393193557a149aa21f3b4c463c946a456",
      "closedAt": "2025-04-30T15:22:22Z",
      "mergedAt": "2025-04-30T15:22:22Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "e2663b57cf233d3ada5040739957f59dfe30770f"
      },
      "comments": [
        {
          "author": "jhoyla",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think this is a really good change, it makes it much harder for someone to claim someone else's public key. ",
          "createdAt": "2025-04-30T15:23:42Z",
          "updatedAt": "2025-04-30T15:23:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6nVoqW",
          "commit": {
            "abbreviatedOid": "89512ac"
          },
          "author": "punkeel",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-30T15:20:41Z",
          "updatedAt": "2025-04-30T15:20:41Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "(this is also missing `keyid`)",
              "createdAt": "2025-04-30T15:20:41Z",
              "updatedAt": "2025-04-30T15:20:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6nVpA1",
          "commit": {
            "abbreviatedOid": "89512ac"
          },
          "author": "punkeel",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-04-30T15:20:59Z",
          "updatedAt": "2025-04-30T15:20:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOOXJyWM6nVqX3",
          "commit": {
            "abbreviatedOid": "89512ac"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-30T15:22:16Z",
          "updatedAt": "2025-04-30T15:22:16Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "and expires, and created. I wanted this to be illustrative, but agree that fixing would be great. doing that in the next commit",
              "createdAt": "2025-04-30T15:22:16Z",
              "updatedAt": "2025-04-30T15:22:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOOXJyWM6VGrZt",
      "title": "Add test vectors",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/16",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [],
      "body": "Two test vectors have been added:\r\n1. ed25519 without Signature-Agent\r\n2. ed25519 with Signature-Agent\r\n\r\nTheir format is similar to RFC 9421.\r\nThey have been generated with the TypeScript implementation https://github.com/cloudflareresearch/web-bot-auth/issues/4",
      "createdAt": "2025-05-06T13:00:34Z",
      "updatedAt": "2025-05-06T15:46:59Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "49b518a6ae42c92e97e2bf409c814ac7da0e0931",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "test-vectors",
      "headRefOid": "77fa7242acd98974f23b617623074757243e07b6",
      "closedAt": "2025-05-06T15:46:55Z",
      "mergedAt": "2025-05-06T15:46:55Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "0d5e567ad961754f0d2e75c4406329064c00161c"
      },
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Relates to #11 ",
          "createdAt": "2025-05-06T15:46:51Z",
          "updatedAt": "2025-05-06T15:46:51Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 17,
      "id": "PR_kwDOOXJyWM6VJRTR",
      "title": "Add considerations about global nonce",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/17",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "cc @jhoyla \r\n\r\nClose #7",
      "createdAt": "2025-05-06T17:24:11Z",
      "updatedAt": "2025-05-07T08:33:00Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "c4279afa757e29dcb9c71b7d3841833b0a5fe9d0",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "nonce-store",
      "headRefOid": "458c7a26407412bcfecd14d1bf522b1c24b313cb",
      "closedAt": "2025-05-07T08:32:57Z",
      "mergedAt": "2025-05-07T08:32:57Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "9ca1b81683bc472dd5ef15079be3cf601dae6873"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 18,
      "id": "PR_kwDOOXJyWM6VJTii",
      "title": "Multi CDN considerations",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/18",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "cc @jhoyla \r\n\r\nCloses #5",
      "createdAt": "2025-05-06T17:28:55Z",
      "updatedAt": "2025-05-07T08:34:54Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "9ca1b81683bc472dd5ef15079be3cf601dae6873",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "multi-cdn",
      "headRefOid": "11192919e10fc795f900e9417036bca3992bfda3",
      "closedAt": "2025-05-07T08:34:51Z",
      "mergedAt": "2025-05-07T08:34:50Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "5d213c19c25ad582349e962d09c53f1d5d69b64b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "PR_kwDOOXJyWM6WjQLI",
      "title": "Minor Typo Fixes",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/21",
      "state": "MERGED",
      "author": "hawkinsw",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-05-17T06:51:54Z",
      "updatedAt": "2025-05-17T18:20:32Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "f5ba8c434b869c33215dd5ce161c011e7f0443ec",
      "headRepository": "hawkinsw/http-message-signatures-directory",
      "headRefName": "patch-1",
      "headRefOid": "446d3b41f5d579e867904e1b0c644ae80bf51ff4",
      "closedAt": "2025-05-17T18:20:32Z",
      "mergedAt": "2025-05-17T18:20:32Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "a8ab1dcf1fa34814cf6656b09ad1207cfcaa9585"
      },
      "comments": [
        {
          "author": "hawkinsw",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I really enjoyed reading the draft and look forward to working with your implementations. I hope that these minor changes are helpful!",
          "createdAt": "2025-05-17T06:52:26Z",
          "updatedAt": "2025-05-17T06:52:26Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6pxpea",
          "commit": {
            "abbreviatedOid": "2a7c4a5"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks great. One minor additional correction.\r\n\r\nThank you!",
          "createdAt": "2025-05-17T17:59:47Z",
          "updatedAt": "2025-05-17T18:00:50Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "correcting another typo here\r\n```suggestion\r\nMentioned in {{signature-agent}}, the Agent MAY send requests with `Signature-Agent` header.\r\n```",
              "createdAt": "2025-05-17T17:59:47Z",
              "updatedAt": "2025-05-17T18:00:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDOOXJyWM6W24XZ",
      "title": "Subsection about signing additional headers",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/25",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Close #22",
      "createdAt": "2025-05-20T09:36:05Z",
      "updatedAt": "2025-08-07T10:24:08Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "a8ab1dcf1fa34814cf6656b09ad1207cfcaa9585",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "additional-headers",
      "headRefOid": "af7ec02d11144bdc01bab9fefe7b4ae125171601",
      "closedAt": "2025-05-20T12:18:21Z",
      "mergedAt": "2025-05-20T12:18:21Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "c593cb13697dd3897e279fbeb5d451edf8985ea3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 26,
      "id": "PR_kwDOOXJyWM6W4ju8",
      "title": "Use of TLS",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/26",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Closes #20\r\n\r\ncc @jhoyla ",
      "createdAt": "2025-05-20T12:33:26Z",
      "updatedAt": "2025-05-20T13:38:27Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "c593cb13697dd3897e279fbeb5d451edf8985ea3",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "tls",
      "headRefOid": "36ae070bddb59a755193cb92f95b89ad35b280ac",
      "closedAt": "2025-05-20T13:38:16Z",
      "mergedAt": "2025-05-20T13:38:16Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "dd5b682cc9b61d893a9152e2c5b04bbe4a31c2f1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 28,
      "id": "PR_kwDOOXJyWM6XOXaX",
      "title": "Add RSASSA-PSS using SHA-512 test vectors",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/28",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Two more test vectors\r\n\r\nThis hopefully prevents ossification on ed25519\r\n\r\nTests have been generated using cloudflareresearch/web-bot-auth#10",
      "createdAt": "2025-05-22T12:55:55Z",
      "updatedAt": "2025-05-24T05:33:36Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "026a58ff9a72d16770a958b2d2b47d2e955f6d74",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "add-rsa-pss-sha512",
      "headRefOid": "e3d8f5f2626e97a80acfc1f70d6cacd007a4a784",
      "closedAt": "2025-05-24T05:33:31Z",
      "mergedAt": "2025-05-24T05:33:31Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "ab8dcfd5a5403fc155363d5c23fb81e6d6cf1fb4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 29,
      "id": "PR_kwDOOXJyWM6XXF_U",
      "title": "First draft for robots.txt extension with signature-agent line",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/29",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-05-23T10:03:34Z",
      "updatedAt": "2025-05-23T10:03:48Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "026a58ff9a72d16770a958b2d2b47d2e955f6d74",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "robotstxt-signatureagent",
      "headRefOid": "7c3e6fb52b9a605b4e5be4f1170ad999258605f3",
      "closedAt": "2025-05-23T10:03:45Z",
      "mergedAt": "2025-05-23T10:03:45Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "a9616db98eec17534615c97a401ead338df9d2c0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 31,
      "id": "PR_kwDOOXJyWM6XXRaL",
      "title": "Recommend use of TLS 1.3",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/31",
      "state": "MERGED",
      "author": "loganaden",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-05-23T10:23:40Z",
      "updatedAt": "2025-05-23T13:07:07Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "a9616db98eec17534615c97a401ead338df9d2c0",
      "headRepository": "cyberstormdotmu/http-message-signatures-directory",
      "headRefName": "loganaden-patch-tls_13",
      "headRefOid": "2c1c91d951fe004818fa04cf72ea6a71b465f838",
      "closedAt": "2025-05-23T13:06:53Z",
      "mergedAt": "2025-05-23T13:06:53Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "4d5e29349d123821f3a2f4e955e62eb24d0ff937"
      },
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Thanks. You should add yourself in the acknowledgement at the end as well, if you are fine with it.\r\n\r\nIt's sorted by last names",
          "createdAt": "2025-05-23T11:20:43Z",
          "updatedAt": "2025-05-23T11:20:43Z"
        },
        {
          "author": "loganaden",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@thibmeu will do.",
          "createdAt": "2025-05-23T11:39:35Z",
          "updatedAt": "2025-05-23T11:39:35Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Merged. Thanks again!",
          "createdAt": "2025-05-23T13:07:06Z",
          "updatedAt": "2025-05-23T13:07:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6qtjXZ",
          "commit": {
            "abbreviatedOid": "b9e1fea"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-23T11:14:50Z",
          "updatedAt": "2025-05-23T11:14:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "That's the right change. The `informative` section at the top should also be update to remove `RFC5246` and use `RFC8446` instead.\r\n\r\nI'm not able to update your fork. Would be awesome if you do it.",
              "createdAt": "2025-05-23T11:14:51Z",
              "updatedAt": "2025-05-23T11:14:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6qtyAf",
          "commit": {
            "abbreviatedOid": "b9e1fea"
          },
          "author": "loganaden",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-23T11:39:19Z",
          "updatedAt": "2025-05-23T11:39:20Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I will update it. ",
              "createdAt": "2025-05-23T11:39:19Z",
              "updatedAt": "2025-05-23T11:39:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6qt2fp",
          "commit": {
            "abbreviatedOid": "b9e1fea"
          },
          "author": "loganaden",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-23T11:47:32Z",
          "updatedAt": "2025-05-23T11:47:32Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Done.",
              "createdAt": "2025-05-23T11:47:32Z",
              "updatedAt": "2025-05-23T11:47:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOOXJyWM6XiGUi",
      "title": "typo fix",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/33",
      "state": "MERGED",
      "author": "loganaden",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-05-25T08:33:35Z",
      "updatedAt": "2025-05-25T08:37:23Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "ab8dcfd5a5403fc155363d5c23fb81e6d6cf1fb4",
      "headRepository": "cyberstormdotmu/http-message-signatures-directory",
      "headRefName": "loganaden-patch-typo_fix",
      "headRefOid": "e68647caf39b82214c1abb1e3f9bf2d73c7e2a21",
      "closedAt": "2025-05-25T08:37:23Z",
      "mergedAt": "2025-05-25T08:37:23Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "77eeb6f0964e1dccd5c790e57101c795dbda4cf2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6q32dU",
          "commit": {
            "abbreviatedOid": "e68647c"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thanks for the nit fix",
          "createdAt": "2025-05-25T08:37:16Z",
          "updatedAt": "2025-05-25T08:37:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOOXJyWM6X1iSA",
      "title": "Update REP draft with max-crawl-rate directive",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/34",
      "state": "CLOSED",
      "author": "gauribaraskar",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Update the REP extension to include multiple directives.",
      "createdAt": "2025-05-27T19:16:23Z",
      "updatedAt": "2025-07-24T15:33:09Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "77eeb6f0964e1dccd5c790e57101c795dbda4cf2",
      "headRepository": "gauribaraskar/http-message-signatures-directory",
      "headRefName": "update-to-rep-directives",
      "headRefOid": "6af3f92359f91165a9b7ab726e17ec2968672041",
      "closedAt": "2025-07-24T15:33:08Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Thanks @gauribaraskar for the PR. I think at this point a discussion in #19 would be more useful and avoid multiplication of work.\r\n\r\nSpecifically, if introducing `Signature-Agent`, `Max-crawl-rate`, we could also take the opportunity to define `Crawl-delay` and `Sitemap` within an IANA directory.",
          "createdAt": "2025-05-28T09:18:21Z",
          "updatedAt": "2025-05-28T09:18:21Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "added, with a different framing and definition. you can review on the draft directly. This is likely to evolve, as other directives are being discussed in [ai-control mailing](https://mailarchive.ietf.org/arch/msg/ai-control/eFJw6WJlu38ag541YYLdy3p6lxU/) for instance ",
          "createdAt": "2025-06-17T08:18:32Z",
          "updatedAt": "2025-06-17T08:18:32Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "closing as off focus for now. we can come back to it if there are expressions of a clearer need.",
          "createdAt": "2025-07-24T15:33:08Z",
          "updatedAt": "2025-07-24T15:33:08Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 37,
      "id": "PR_kwDOOXJyWM6aBypg",
      "title": "Add suggested response status code",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/37",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "When an Origin respond after refusing an HTTP message signatures, the spec recommends status code.\r\n\r\nThis commit adds:\r\n1. 403 when returning a new `Accept-Signature` header. This is because 401 requires `WWW-Authenticate` to be returned, which does not apply. fyi @smhendrickson\r\n2. 429 for a new nonce/replay\r\n3. 400 for malformatted headers\r\n\r\nWe do not recommend status code when a tag is not present given the signature would be ignore, or when the keyid is unknown because the key would be ignored as well. This would be a final response status code, that is up to the origin to decide.\r\n\r\nCloses #35\r\n\r\n@gauribaraskar",
      "createdAt": "2025-06-11T12:55:23Z",
      "updatedAt": "2025-06-12T12:10:49Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "d2faa3b031afbf08b87078870dc8c1011a1a52c1",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "add-status-code",
      "headRefOid": "78f8741abc715ac72add996ec82a1eaa2d7d77fc",
      "closedAt": "2025-06-12T12:10:46Z",
      "mergedAt": "2025-06-12T12:10:46Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "6131752251fad4c7edb4c7c6604fbc2338f25cab"
      },
      "comments": [
        {
          "author": "gcloudflare",
          "authorAssociation": "NONE",
          "body": "LGTM",
          "createdAt": "2025-06-12T11:53:26Z",
          "updatedAt": "2025-06-12T11:53:26Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 39,
      "id": "PR_kwDOOXJyWM6aC_Wo",
      "title": "Fix Signature-Agent as a structured field",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/39",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "bug"
      ],
      "body": "Closes #38",
      "createdAt": "2025-06-11T14:33:23Z",
      "updatedAt": "2025-06-12T07:54:55Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "d2faa3b031afbf08b87078870dc8c1011a1a52c1",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "fix-structured-field-signature-agent",
      "headRefOid": "edbb294679ce8b8491d3598a21cb8c0a69fb550c",
      "closedAt": "2025-06-12T07:54:52Z",
      "mergedAt": "2025-06-12T07:54:52Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "37af506083d535339ca8c8d6a83740c722bc3b39"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 40,
      "id": "PR_kwDOOXJyWM6aR4dH",
      "title": "Add key binding to domain name consideration in directory draft",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/40",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "HTTP Message Signature directory is served via a well known. To ease validation and prevent malicious mirroring, we add reccomendation to serve the directory along with one message signature per key.\r\n\r\nCloses #36\r\n",
      "createdAt": "2025-06-12T20:04:13Z",
      "updatedAt": "2025-06-16T09:33:45Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "6131752251fad4c7edb4c7c6604fbc2338f25cab",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "fix-36",
      "headRefOid": "5de2a72d8a82441c223afd1f72c685c34e6ab8ce",
      "closedAt": "2025-06-16T09:33:42Z",
      "mergedAt": "2025-06-16T09:33:42Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "72cf4cca81abab3802f26ecad791620eaf972e4d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6uiznE",
          "commit": {
            "abbreviatedOid": "5de2a72"
          },
          "author": "AkshatM",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-14T13:56:33Z",
          "updatedAt": "2025-06-14T13:56:34Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I realized too late that [RFC 9421](https://www.rfc-editor.org/rfc/rfc9421#name-creating-the-signature-base) doesn't actually specify a way to sign message _bodies_ - only headers and derived components. \r\n\r\nIn Section 7.4.2, they recommend use of the DIGEST header: https://www.rfc-editor.org/rfc/rfc9421#security-message-content\r\n\r\nWe should amend this so that `Content-Digest` is generated and included in the response, with the signature components covering `Content-Digest`",
              "createdAt": "2025-06-14T13:56:33Z",
              "updatedAt": "2025-06-14T13:56:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6ui4ok",
          "commit": {
            "abbreviatedOid": "5de2a72"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-14T14:21:53Z",
          "updatedAt": "2025-06-14T14:21:53Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "The change in this PR does not mention signing the digest. Solely `@authority`.",
              "createdAt": "2025-06-14T14:21:53Z",
              "updatedAt": "2025-06-14T14:21:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6ujBd9",
          "commit": {
            "abbreviatedOid": "5de2a72"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-14T14:49:38Z",
          "updatedAt": "2025-06-14T14:49:38Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "The reasoning about not having digest: authority+signature is sufficient to validate one has the correct public key. Digest over the whole body may prevent mirroring.\r\n\r\nShould we recommended Content-Digest to be set: maybe. But that would be a separate issue",
              "createdAt": "2025-06-14T14:49:38Z",
              "updatedAt": "2025-06-14T14:49:38Z"
            }
          ]
        }
      ]
    },
    {
      "number": 41,
      "id": "PR_kwDOOXJyWM6aXrT7",
      "title": "Add chaining example",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/41",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "JWK support chaining via x5c field.\r\nThis commit adds such example to the directory draft.\r\n\r\nIt leverages RFC9500 test key as the \"Root\", and keeps RFC9421 key for the child.\r\n\r\n@sandormajor I think your review could be valuable here as discussed on the mailing.\r\nAlso @EthanHeilman fyi. There might be a neat solution with JWK that I'm not seeing.",
      "createdAt": "2025-06-13T10:50:31Z",
      "updatedAt": "2025-06-19T12:56:34Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "21ae250b7064a0a6006fa4acadb321a0643eb080",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "chaining-27",
      "headRefOid": "e018dd0e04d31749c5d84c4524080401fd893b80",
      "closedAt": "2025-06-19T09:11:46Z",
      "mergedAt": "2025-06-19T09:11:46Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "f6d8526e7fa0caeeb1c583194ef92125b14f62a5"
      },
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "@sandormajor I like the idea of using AIA for this. Specifically, I like that the JWK only include the leaf cert and a pointer to the parent root certificate.\r\nRealistically, I imagine having the whole root is valuable as well, but that increases the size of the header quite significantly.\r\n\r\nAnother consideration I had was to use `x5u` from [RFC 7515](https://www.rfc-editor.org/rfc/rfc7515.html#section-4.1.5) to get the certificate chain directly from a parent user agent. \r\nThe example would look as follow\r\n\r\n```json\r\n{\r\n  \"keys\": [{\r\n    \"kty\": \"OKP\",\r\n    \"crv\": \"Ed25519\",\r\n    \"kid\": \"NFcWBst6DXG-N35nHdzMrioWntdzNZghQSkjHNMMSjw\",\r\n    \"x\": \"JrQLj5P_89iXES9-vFgrIy29clF9CC_oPPsw3c5D0bs\",\r\n    \"use\": \"sig\",\r\n    \"nbf\": 1712793600,\r\n    \"exp\": 1715385600,\r\n    \"x5u\": \"https://example.com/.well-known/http-message-signature-chain/sub.example.com.crt\"\r\n}\r\n```\r\n\r\nFor now, I thin we can include all these as examples, given that's supported by the underlying JWK standards.\r\nSitting down and deciding what is going to be used by crawlers/bots and what is reasonable to ask from verifiers seems to be needed, and having all examples at hand will be useful then.\r\n\r\nWhat do you think?",
          "createdAt": "2025-06-17T19:19:15Z",
          "updatedAt": "2025-06-17T19:19:15Z"
        },
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "I've added all three chaining/delegation as examples, with a mention that while all would be supported by JWKS or X509 standards, implementers should be careful while implementing it, as there is no consensus on the right method for HTTP Message Signatures yet.\r\n\r\nI'll add it as a discussion item for the upcoming IETF and for the group.\r\n\r\nHaving all examples laid out should help to better understand them, and improve future drafts.",
          "createdAt": "2025-06-19T09:11:42Z",
          "updatedAt": "2025-06-19T09:11:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6uaA-Z",
          "commit": {
            "abbreviatedOid": "34a0533"
          },
          "author": "EthanHeilman",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-13T19:02:48Z",
          "updatedAt": "2025-06-13T19:02:48Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Why is keys a dict rather than a list of dicts i.e., \r\n\r\n```\r\n  \"keys\": [\r\n     {\r\n    \"kty\": \"OKP\",\r\n    \"crv\": \"Ed25519\",\r\n    \"kid\": \"NFcWBst6DXG-N35nHdzMrioWntdzNZghQSkjHNMMSjw\",\r\n    \"x\": \"JrQLj5P_89iXES9-vFgrIy29clF9CC_oPPsw3c5D0bs\",\r\n    \"use\": \"sig\",\r\n    \"nbf\": 1712793600,\r\n    \"exp\": 1715385600\r\n    }    \r\n ]   \r\n ```  \r\n\r\n\r\n\r\n",
              "createdAt": "2025-06-13T19:02:48Z",
              "updatedAt": "2025-06-13T19:02:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6uaLf8",
          "commit": {
            "abbreviatedOid": "34a0533"
          },
          "author": "EthanHeilman",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I'm a big fan of x5c in JWKs so I like this approach you have here.\r\n\r\nIs the identity which is signing the message the x509 subject identity given in the leaf x509 cert in the x5c?\r\n\r\n",
          "createdAt": "2025-06-13T19:22:26Z",
          "updatedAt": "2025-06-13T19:23:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOOXJyWM6ujCbq",
          "commit": {
            "abbreviatedOid": "34a0533"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-14T14:52:33Z",
          "updatedAt": "2025-06-14T14:52:33Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "good catch. this was an issue with the old example as well. i've fixed it.",
              "createdAt": "2025-06-14T14:52:33Z",
              "updatedAt": "2025-06-14T14:52:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6vCCML",
          "commit": {
            "abbreviatedOid": "d4e9553"
          },
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Thanks Thibault!\r\n\r\nWhat I meant on the email thread is a hybrid between the two examples: Using the HTTP Signature-Agent the verifier can tell that the request was indeed signed by directory.test (because it's fetching the JWKS from the .well-known of directory.test), and the data URI Signature-Agent allows to send certificates in the request itself, but the root certificate (for example.com in the example) is self-signed and not tied to example.com in any way.\r\n\r\nTo make sure that the root key is owned by example.com there needs to be further validation, so I think one solution could be to use a data URI Signature-Agent with only the leaf certificate (sub.example.com in the example) and a pointer to the root/intermediate certificate. I think this could be accomplished with an AIA in the leaf cert, e.g.:\r\n```\r\nX509v3 extensions:\r\n  Authority Information Access: \r\n    CA Issuers - URI:https://example.com/.well-known/http-message-signatures-directory.crt\r\n```\r\n\r\nThe verifier would then verify the signature with the public key in the Signature-Agent, match the public key with the leaf cert, then fetch the root cert from the AIA URI and verify the leaf cert with it.\r\n\r\nWhat do you think?\r\n\r\nNote that the public key is redundant as it's part of the JWKS and the leaf cert as well, so maybe it's enough to just send that cert when using a data URI header.",
          "createdAt": "2025-06-17T17:40:20Z",
          "updatedAt": "2025-06-17T18:24:01Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "nit, to match the URI specified under the IANA Considerations:\r\n```suggestion\r\nGET /.well-known/http-message-signatures-directory HTTP/1.1\r\n```\r\n(same above but I can't comment there)",
              "createdAt": "2025-06-17T17:40:20Z",
              "updatedAt": "2025-06-17T18:24:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6vDBoo",
          "commit": {
            "abbreviatedOid": "d4e9553"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-17T19:10:57Z",
          "updatedAt": "2025-06-17T19:10:58Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I initially wanted to stay close to RFC 9421 example, but indeed, using the well-known seems better. I've corrected it on both this one and the one above.",
              "createdAt": "2025-06-17T19:10:57Z",
              "updatedAt": "2025-06-17T19:10:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6vaOdG",
          "commit": {
            "abbreviatedOid": "e018dd0"
          },
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Looks good, thanks Thibault! The `x5u` also makes sense, although that has the same problem when issuing thousands of leaf keys, that you have to publish all of them in the well-known but now also need to serve the certificate for all of them. But it makes sense to have an example there for further discussion.",
          "createdAt": "2025-06-19T12:45:49Z",
          "updatedAt": "2025-06-19T12:45:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOOXJyWM6vaYWm",
          "commit": {
            "abbreviatedOid": "e018dd0"
          },
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-19T12:56:34Z",
          "updatedAt": "2025-06-19T12:56:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDOOXJyWM6aZva-",
      "title": "Fix example Signature-Agent header to include protocol",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/42",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "bug"
      ],
      "body": "Signature-Agent MUST include a protocol. The example did not have any. We update them to use `https`.\r\n\r\nGenerated via the npm version https://github.com/cloudflare/web-bot-auth/pull/31",
      "createdAt": "2025-06-13T14:25:24Z",
      "updatedAt": "2025-06-13T14:41:09Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "6131752251fad4c7edb4c7c6604fbc2338f25cab",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "add-protocol-signature-agent-examples",
      "headRefOid": "6c2b3bc66dcdfc827fb636a8fab9745f085e192e",
      "closedAt": "2025-06-13T14:41:07Z",
      "mergedAt": "2025-06-13T14:41:07Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "4f6550fddba70dd345f8955c5794416a8313dee9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 48,
      "id": "PR_kwDOOXJyWM6dkCOe",
      "title": "Update linzer url",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/48",
      "state": "MERGED",
      "author": "nomadium",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Thanks for including Linzer as client in this specification.\r\n\r\nI noticed that the URL included in the draft is now broken since I renamed the file referenced there a few weeks ago, so I'm sending this small PR to correct it.\r\n\r\nThanks!",
      "createdAt": "2025-07-05T15:23:26Z",
      "updatedAt": "2025-07-05T16:15:39Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "7eb86ccaf00ef9feca08dec8ad10f95c8ad639f3",
      "headRepository": "nomadium/http-message-signatures-directory",
      "headRefName": "fix-linzer-url",
      "headRefOid": "559402fa032cb520a41dedea90f3d5829a763a31",
      "closedAt": "2025-07-05T16:15:39Z",
      "mergedAt": "2025-07-05T16:15:38Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "64f821abd21c1ffa34dbcebc96ac5e416cb5dd0e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM6yO6a1",
          "commit": {
            "abbreviatedOid": "559402f"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thanks a lot for the PR. Approved.\r\n\r\nIf that happens again down the line, a solution may just be to have a commit based link",
          "createdAt": "2025-07-05T16:15:33Z",
          "updatedAt": "2025-07-05T16:15:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 50,
      "id": "PR_kwDOOXJyWM6hgOEi",
      "title": "Address review from @doj",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/50",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "bug"
      ],
      "body": "This commit addresses the review from @doj.\r\n\r\nIf you're OK with it, happy to add a commit to list you as a contributor.\r\n\r\nReview provided below\r\n\r\n```\r\nsection 2.1 HTTP layer choice: s/This architectures operates/This\r\narchitecture operates/\r\n\r\nsection 4 Architecture: s/along with Signature-Agent header/along with\r\nthe Signature-Agent header/\r\n\r\nsection 4.2.  Generating HTTP Message Signature: s/It is RECOMMEND the\r\nexpiry/It is RECOMMENDED the expiry/.\r\n\r\nsection 4.2.2.  Anti-replay: s/defined in Section 4.2 as follow/defined\r\nin Section 4.2 as follows:/\r\n\r\nsection 4.5.  Key Distribution and Discovery: s/Ideally matches some\r\nIANA registry for preferences/Ideally matches some IANA registry for\r\npreferences./\r\n\r\ns/Examples/Examples:/\r\n\r\nsection 4.5.3.  Signature-Agent header: s/and an upgrade to\r\ncryptographically secured protocol./and an upgrade to a\r\ncryptographically secured protocol./\r\n\r\nsection A.2.  EdDSA Using Curve edwards25519: s/This section\r\ninclude/This section includes/\r\n```",
      "createdAt": "2025-07-31T09:56:29Z",
      "updatedAt": "2025-08-05T07:08:20Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "64f821abd21c1ffa34dbcebc96ac5e416cb5dd0e",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "review-from-doj",
      "headRefOid": "653bc7f5790464441b9e14e69af2fbad2102309a",
      "closedAt": "2025-08-05T07:06:42Z",
      "mergedAt": "2025-08-05T07:06:42Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "183cea3c6c5b9381ed0dedfc29cc01b63f868ac5"
      },
      "comments": [
        {
          "author": "doj",
          "authorAssociation": "NONE",
          "body": "looks good to me.",
          "createdAt": "2025-07-31T15:52:17Z",
          "updatedAt": "2025-07-31T15:52:17Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 51,
      "id": "PR_kwDOOXJyWM6iOwNJ",
      "title": "Address review from @doj on directory draft",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/51",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "bug"
      ],
      "body": "section 1. Introduction: I would add a newline and a character like dash\r\n- or star * to make this a list of items for the three listed items after \"This document defines:\"\r\n\r\ns/directory location discovery/directory location discovery./\r\n\r\nsection 3. Configuration: s/Client application SHOULD/A client application SHOULD/\r\n\r\nsection 4.1. Header Field Definition: add a newline character before the list items of the paragraph \"The URI scheme MUST be one of:\"\r\n\r\nsection 5.1. Key rotation: s/with different validity period./with a different validity period./",
      "createdAt": "2025-08-05T16:35:17Z",
      "updatedAt": "2025-08-07T10:24:06Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "183cea3c6c5b9381ed0dedfc29cc01b63f868ac5",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "review-from-doj-2",
      "headRefOid": "94883bfe53adeafdc62f28c932684ccc4b3c1e44",
      "closedAt": "2025-08-05T16:54:48Z",
      "mergedAt": "2025-08-05T16:54:48Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "41ab44b873a688d90b470e3cfb02848558459a90"
      },
      "comments": [
        {
          "author": "doj",
          "authorAssociation": "NONE",
          "body": "changes look good.",
          "createdAt": "2025-08-05T16:48:44Z",
          "updatedAt": "2025-08-05T16:48:44Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 55,
      "id": "PR_kwDOOXJyWM6mm6Li",
      "title": "Remove \"purpose\" field from web-bot-auth architecture",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/55",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "bug"
      ],
      "body": "The field isnot used, is not clearly defined, and probably should be in its own dedicated draft if introduced.\r\n\r\nCloses #53\r\n\r\ncc @garyillyes @sandormajor",
      "createdAt": "2025-09-03T09:13:53Z",
      "updatedAt": "2025-09-05T08:04:57Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "6b25d457b2e1b76c8e05dda377572e7e6dd1bcce",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "fix-purpose-field-architecture",
      "headRefOid": "d9cdbfa00587a48fb853c645f407a78a4a1eb3b3",
      "closedAt": "2025-09-05T08:04:53Z",
      "mergedAt": "2025-09-05T08:04:53Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "182402830c04dc05b78d446e2445904d5818fc10"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM69skxE",
          "commit": {
            "abbreviatedOid": "d9cdbfa"
          },
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "looks good to me, thank you!",
          "createdAt": "2025-09-03T21:30:58Z",
          "updatedAt": "2025-09-03T21:30:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOOXJyWM6mna0j",
      "title": "Improve reverse proxy section and nonce validation",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/56",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "Adds\r\n* precision about impersonation\r\n* examples of origin nonce validation policies\r\n* round trip considerations\r\n\r\ncc @sandormajor\r\n\r\nCloses #54",
      "createdAt": "2025-09-03T09:58:39Z",
      "updatedAt": "2025-09-09T20:15:13Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "6b25d457b2e1b76c8e05dda377572e7e6dd1bcce",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "fix-reverse-proxy-consideratoins",
      "headRefOid": "ed9861fc15cd1c2fd77a5968b52f6208f40beed8",
      "closedAt": "2025-09-09T16:53:48Z",
      "mergedAt": "2025-09-09T16:53:48Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "e63b5aa8185ad82b4ec341928752250fafb81a6a"
      },
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Poke @sandormajor",
          "createdAt": "2025-09-09T07:13:07Z",
          "updatedAt": "2025-09-09T07:13:07Z"
        },
        {
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "body": "> Poke @sandormajor\r\n\r\nI left a comment last week but I'm not sure if it was published. Overall it looks good to me, I only have a question about negotiating the nonce strategy. The text gives examples of potential nonce strategies but it's not clear how the origin/bot should communicate the expected/used strategy",
          "createdAt": "2025-09-09T15:50:33Z",
          "updatedAt": "2025-09-09T15:50:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOOXJyWM69sjM8",
          "commit": {
            "abbreviatedOid": "ed9861f"
          },
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-09-03T21:28:26Z",
          "updatedAt": "2025-09-09T15:47:25Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Is there a mechanism today to negotiate the nonce strategy? If the origin sends an `accept-signature` with the nonce, the agent should use that nonce, but any other strategy would need to be negotiated out of bound, right?",
              "createdAt": "2025-09-03T21:28:26Z",
              "updatedAt": "2025-09-09T15:47:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6-3wr0",
          "commit": {
            "abbreviatedOid": "ed9861f"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-09T15:57:34Z",
          "updatedAt": "2025-09-09T15:57:34Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "no other strategy afaik.\r\n\r\nadding a ticket",
              "createdAt": "2025-09-09T15:57:34Z",
              "updatedAt": "2025-09-09T15:57:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6-4d8V",
          "commit": {
            "abbreviatedOid": "ed9861f"
          },
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-09T16:53:33Z",
          "updatedAt": "2025-09-09T16:53:33Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "#61 ",
              "createdAt": "2025-09-09T16:53:33Z",
              "updatedAt": "2025-09-09T16:53:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOXJyWM6-6_zb",
          "commit": {
            "abbreviatedOid": "ed9861f"
          },
          "author": "sandormajor",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-09T20:15:12Z",
          "updatedAt": "2025-09-09T20:15:13Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "Thanks",
              "createdAt": "2025-09-09T20:15:13Z",
              "updatedAt": "2025-09-09T20:15:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 57,
      "id": "PR_kwDOOXJyWM6nAmsM",
      "title": "Update changelog for directory draft",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/57",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "documentation"
      ],
      "body": "Simple changelog update",
      "createdAt": "2025-09-05T09:02:49Z",
      "updatedAt": "2025-09-05T09:08:26Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "182402830c04dc05b78d446e2445904d5818fc10",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "changelog-update-directory-v03",
      "headRefOid": "0531be0dec370953079ec9409ae390725c55e841",
      "closedAt": "2025-09-05T09:08:01Z",
      "mergedAt": "2025-09-05T09:08:01Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "d9f1953d2379c8557c7d90592b5d07a62827cc51"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 58,
      "id": "PR_kwDOOXJyWM6nBARO",
      "title": "Registry and signature argent card draft",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/58",
      "state": "MERGED",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "This draft introdudes signature agent cards, and a registry to hold them\r\n\r\nSignature-agent card allows signers to provide information about themselves: name, contact, keys, supported rfc9309 directive, expected crawl rate, etc. Initial parameters suggested in #49. They are an extension of HTTP Message Signature directory, which should facilitate adoption.\r\n\r\nRegistry is a plain text response with one signature-agent card per line. This is similar to raw IP list that can be found on GitHub or on providers websites. It allows to host registries on any file server.\r\n\r\nTo be published and sent to the list\r\n\r\n",
      "createdAt": "2025-09-05T09:47:01Z",
      "updatedAt": "2025-09-05T09:51:56Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "d9f1953d2379c8557c7d90592b5d07a62827cc51",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "registry-draft",
      "headRefOid": "f3be70c6256c1d96b8402f1f6f701c0db0330327",
      "closedAt": "2025-09-05T09:47:08Z",
      "mergedAt": "2025-09-05T09:47:08Z",
      "mergedBy": "thibmeu",
      "mergeCommit": {
        "oid": "abc786361d679f123851f124998d65a2675706c7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 59,
      "id": "PR_kwDOOXJyWM6nYPTW",
      "title": "Address comments for registry draft",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/59",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "bug"
      ],
      "body": "Add precisions about known URLs\r\nAdd placeholder for image size\r\n\r\nOn recommendation from Bill\r\n\r\ncc @punkeel for review",
      "createdAt": "2025-09-08T12:51:15Z",
      "updatedAt": "2025-09-09T07:12:47Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "abc786361d679f123851f124998d65a2675706c7",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "fix-bill-comment",
      "headRefOid": "7b35a97490be5c279e581133da864781eb51c353",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 64,
      "id": "PR_kwDOOXJyWM6oVK0t",
      "title": "Add an about-url field",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/64",
      "state": "OPEN",
      "author": "ulaskira",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "",
      "createdAt": "2025-09-12T22:00:40Z",
      "updatedAt": "2025-09-13T15:46:37Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "e63b5aa8185ad82b4ec341928752250fafb81a6a",
      "headRepository": "ulaskira/http-message-signatures-directory",
      "headRefName": "ulas/abouturl",
      "headRefOid": "6c89edf729bdc90a34433375b8941dd6afeee6f4",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "thibmeu",
          "authorAssociation": "OWNER",
          "body": "Thanks for the proposal.\r\n\r\nSome questions I have:\r\n1. should this be `about-url`, or simply `about`.\r\n2. With a url, it's nice to specify the authorised scheme. For instance, I believe authorising `data:` could be useful to inline the about content\r\n3. Is the field meant to be `about` or `description`\r\n\r\nOn the specific PR, you should also modify the IANA registration section to register `about-url` (o whatever the end parameter is)",
          "createdAt": "2025-09-13T07:00:31Z",
          "updatedAt": "2025-09-13T07:00:31Z"
        },
        {
          "author": "ulaskira",
          "authorAssociation": "NONE",
          "body": "I am open to calling this \"description\" and allowing `data:` as a type. Does that work?",
          "createdAt": "2025-09-13T15:46:37Z",
          "updatedAt": "2025-09-13T15:46:37Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 65,
      "id": "PR_kwDOOXJyWM6oXyiV",
      "title": "Refine the discovery section of the registry draft",
      "url": "https://github.com/thibmeu/http-message-signatures-directory/pull/65",
      "state": "OPEN",
      "author": "thibmeu",
      "authorAssociation": "OWNER",
      "assignees": [
        "thibmeu"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "* Define a first formal syntax\r\n* Allow for empty line and comments\r\n* Improve the discovery wording for out of band and public list\r\n* Remove `Signature-Agent-Card` header until further discussions\r\n\r\nClose #63\r\n\r\n@punkeel for review",
      "createdAt": "2025-09-13T07:37:33Z",
      "updatedAt": "2025-09-13T07:37:33Z",
      "baseRepository": "thibmeu/http-message-signatures-directory",
      "baseRefName": "main",
      "baseRefOid": "e63b5aa8185ad82b4ec341928752250fafb81a6a",
      "headRepository": "thibmeu/http-message-signatures-directory",
      "headRefName": "registry-refine-format",
      "headRefOid": "27f658a1c329030cfd25e21a089dd19ddf82d2cb",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}